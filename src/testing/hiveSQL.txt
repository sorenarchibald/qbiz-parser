[{"dag_id": "groupa_phase2_daily_uber_aggr", "task_id": "daily_uber_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_empty_string_function }} SET mapreduce.job.name=Group A - Daily Uber Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_uber_aggr ( advertiser_app STRING, advertiser_campaign STRING, advertiser_target_id STRING, publisher_app STRING, publisher_campaign STRING, publisher_target_id STRING, ad_type INT, bid_type STRING, device_type STRING, country STRING, creative STRING, creative_type STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, event_location STRING, impressions BIGINT, clicks BIGINT, converted_installs BIGINT, total_installs BIGINT, money_earned FLOAT, money_spent FLOAT, completed_videos BIGINT, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/daily_uber_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_uber_aggr PARTITION (dt) SELECT EMPTY_STRING(advertiser_app), EMPTY_STRING(advertiser_campaign), CASE WHEN LENGTH(EMPTY_STRING(advertiser_condition_set)) > 40 THEN NULL ELSE EMPTY_STRING(advertiser_condition_set) END, EMPTY_STRING(publisher_app), EMPTY_STRING(publisher_campaign), CASE WHEN LENGTH(EMPTY_STRING(publisher_condition_set)) > 40 THEN NULL ELSE EMPTY_STRING(publisher_condition_set) END, EMPTY_STRING(ad_type), EMPTY_STRING(bid_type), EMPTY_STRING(device_type), EMPTY_STRING(iso.code) AS iso_country_code, CASE WHEN creative RLIKE '^[A-Za-z0-9]' THEN creative END, CASE WHEN creative_type RLIKE '[0-9]' THEN creative_type END, EMPTY_STRING(asset_size), CASE WHEN asset_ratio LIKE '%,%' THEN REGEXP_EXTRACT(asset_ratio,'(.*?)\\\\,',1) ELSE EMPTY_STRING(asset_ratio) END, EMPTY_STRING(frame), EMPTY_STRING(close_button), EMPTY_STRING(SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(event_location, '\\\\\\0', ''), '\\\\s+', ' '), 1, 1000)), COALESCE(SUM(CASE WHEN metric = 'impressions' THEN value1 END), 0.0), COALESCE(SUM(CASE WHEN metric = 'clicks' THEN value1 END), 0.0), COALESCE(SUM(CASE WHEN metric = 'converted_installs' THEN value1 END), 0.0), COALESCE(SUM(CASE WHEN metric = 'total_installs' THEN value1 END), 0.0), COALESCE(SUM(CASE WHEN metric = 'money' THEN value1 END), 0.0), -- money_eearned -- COALESCE(SUM(CASE WHEN metric = 'money' THEN value2 END), 0.0), -- money_spent -- COALESCE(SUM(CASE WHEN metric = 'videos' THEN value1 END), 0.0), EMPTY_STRING(template), EMPTY_STRING(template_mongo_id), dt FROM ( SELECT advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, ad_type, bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'impressions' metric, distinct_id_count value1, 0 value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_impression_aggr WHERE dt = '{{ ds }}' UNION ALL SELECT advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, ad_type, bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'clicks' metric, distinct_id_count value1, 0 value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_click_aggr WHERE dt = '{{ ds }}' UNION ALL SELECT app advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, ad_type, bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'converted_installs' metric, distinct_id_count value1, 0 value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_install_aggr WHERE dt = '{{ ds }}' AND converted = 1 UNION ALL SELECT app advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, COALESCE(ad_type,1) ad_type, bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'total_installs' metric, distinct_id_count value1, 0 value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_install_aggr WHERE dt = '{{ ds }}' UNION ALL SELECT advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, ad_type, CASE source_type WHEN 0 THEN 'cpc' WHEN 1 THEN 'cpi' WHEN 2 THEN 'cpm' WHEN 4 THEN 'cpcv' END bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'money' metric, final value1, initial value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_transaction_aggr WHERE dt = '{{ ds }}' UNION ALL SELECT advertiser_app, advertiser_campaign, advertiser_condition_set, publisher_app, publisher_campaign, publisher_condition_set, ad_type, bid_type, device_type, country, creative, creative_type, asset_size, asset_ratio, frame, close_button, event_location, 'videos' metric, distinct_id_count value1, 0 value2, template, template_mongo_id, dt FROM {{ table_prefix }}daily_video_complete_aggr WHERE dt = '{{ ds }}' ) r LEFT OUTER JOIN dimensions.countries iso ON r.country = iso.code GROUP BY EMPTY_STRING(advertiser_app), EMPTY_STRING(advertiser_campaign), CASE WHEN LENGTH(EMPTY_STRING(advertiser_condition_set)) > 40 THEN NULL ELSE EMPTY_STRING(advertiser_condition_set) END, EMPTY_STRING(publisher_app), EMPTY_STRING(publisher_campaign), CASE WHEN LENGTH(EMPTY_STRING(publisher_condition_set)) > 40 THEN NULL ELSE EMPTY_STRING(publisher_condition_set) END, EMPTY_STRING(ad_type), EMPTY_STRING(bid_type), EMPTY_STRING(device_type), EMPTY_STRING(iso.code), CASE WHEN creative RLIKE '^[A-Za-z0-9]' THEN creative END, CASE WHEN creative_type RLIKE '[0-9]' THEN creative_type END, EMPTY_STRING(asset_size), CASE WHEN asset_ratio LIKE '%,%' THEN REGEXP_EXTRACT(asset_ratio,'(.*?)\\\\,',1) ELSE EMPTY_STRING(asset_ratio) END, EMPTY_STRING(frame), EMPTY_STRING(close_button), EMPTY_STRING(SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(event_location, '\\\\\\0', ''), '\\\\s+', ' '), 1, 1000)), EMPTY_STRING(template), EMPTY_STRING(template_mongo_id), dt", " "]}, {"dag_id": "groupa_phase1_impressions", "task_id": "daily_impression_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Daily Impression Aggr - {{ ds }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_impression_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, affiliate INT, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/daily_impression_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_impression_aggr PARTITION (dt) SELECT publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, SUM(distinct_id_count), unix_timestamp(), experiment, asset_size, asset_ratio, affiliate, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt FROM {{ table_prefix }}hourly_impression_aggr WHERE dt = '{{ ds }}' GROUP BY publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, experiment, asset_size, asset_ratio, affiliate, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt", " "]}, {"dag_id": "groupa_phase1_impressions", "task_id": "hourly_impression_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_json_parse_function }} SET mapreduce.job.name=Group A - Hourly Impression Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}hourly_impression_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, affiliate INT, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/hourly_impression_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}hourly_impression_aggr PARTITION (dt, hr) SELECT REGEXP_REPLACE(obj['from_app'], '[^0-9a-zA-Z]','') publisher_app, obj['from_campaign'] publisher_campaign, REGEXP_REPLACE(obj['to_app'], '[^0-9a-zA-Z]','') advertiser_app, IF (REGEXP_REPLACE(obj['to_campaign'], '[^0-9a-zA-Z]','') <=> obj['to_campaign'], obj['to_campaign'], \"INVALID_ID\") advertiser_campaign, obj['type'] ad_type, obj['from_condition_set'] publisher_condition_set, obj['to_condition_set'] advertiser_condition_set, REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]','') creative, REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', '') event_location, CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END country, COUNT(DISTINCT COALESCE(obj['impression_id'], obj['impressionId'])) distinct_id_count, unix_timestamp(), NULL experiment, obj['creative_size'] asset_size, obj['creative_ratio'] asset_ratio, obj['affiliate'] affiliate, obj['frame'] frame, obj['close_button'] close_button, CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END device_type, obj['creative_type'] creative_type, obj['bid_type'] bid_type, obj['template'] template, obj['template_mongo_id'] template_mongo_id, js.dt, js.hr FROM ( SELECT * FROM {{ table_prefix }}impression_json WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) js LATERAL VIEW explode(json_parse(json)) a AS obj GROUP BY REGEXP_REPLACE(obj['from_app'], '[^0-9a-zA-Z]',''), obj['from_campaign'], REGEXP_REPLACE(obj['to_app'], '[^0-9a-zA-Z]',''), IF (REGEXP_REPLACE(obj['to_campaign'], '[^0-9a-zA-Z]','') <=> obj['to_campaign'], obj['to_campaign'], \"INVALID_ID\"), obj['type'], obj['from_condition_set'], obj['to_condition_set'], REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]',''), REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', ''), CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END, obj['creative_size'], obj['creative_ratio'], obj['affiliate'], obj['frame'], obj['close_button'], CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, obj['creative_type'], obj['bid_type'], obj['template'], obj['template_mongo_id'], js.dt, js.hr", " "]}, {"dag_id": "groupa_phase1_transactions", "task_id": "daily_transaction_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Daily Transaction Aggr - {{ ds }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_transaction_aggr ( publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, advertiser_app STRING, advertiser_campaign STRING, advertiser_condition_set STRING, ad_type INT, creative STRING, event_location STRING, country STRING, source_type INT, initial FLOAT, final FLOAT, commission FLOAT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/daily_transaction_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_transaction_aggr PARTITION (dt) SELECT publisher_app, publisher_campaign, publisher_condition_set, advertiser_app, advertiser_campaign, advertiser_condition_set, ad_type, creative, event_location, country, source_type, SUM(initial), SUM(final), SUM(commission), unix_timestamp(), experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, template, template_mongo_id, dt FROM {{ table_prefix }}hourly_transaction_aggr WHERE dt = '{{ ds }}' GROUP BY publisher_app, publisher_campaign, publisher_condition_set, advertiser_app, advertiser_campaign, advertiser_condition_set, ad_type, creative, event_location, country, source_type, experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, template, template_mongo_id, dt", " "]}, {"dag_id": "groupa_phase1_transactions", "task_id": "create_hourly_target_spend_aggr", "sql_list": [" USE {{ campaign_spend_db }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{table_prefix}}hourly_target_spend_aggr ( campaign_id STRING, target_id STRING, money_spent FLOAT, sqoop_dt STRING, sqoop_hr STRING, record_timestamp INT, load_type STRING ) PARTITIONED BY (dt STRING, hr STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ' ' STORED AS TEXTFILE LOCATION '{{campaign_spend_basedir}}/{{table_prefix}}hourly_target_spend_aggr'", " "]}, {"dag_id": "groupa_phase1_transactions", "task_id": "hourly_transaction_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Hourly Transaction Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}hourly_transaction_aggr ( publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, advertiser_app STRING, advertiser_campaign STRING, advertiser_condition_set STRING, ad_type INT, creative STRING, event_location STRING, country STRING, source_type INT, initial FLOAT, final FLOAT, commission FLOAT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/hourly_transaction_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}hourly_transaction_aggr PARTITION (dt, hr) SELECT publisher_app, publisher_campaign, publisher_condition_set, advertiser_app, advertiser_campaign, advertiser_condition_set, ad_type, creative, REGEXP_REPLACE(event_location, '[\\\\u0000-\\\\u001f]', '') event_location, country, source_type, SUM(initial), SUM(final), SUM(commission), unix_timestamp(), NULL experiment, asset_size, asset_ratio, frame, close_button, CASE WHEN model LIKE 'iPhone%' THEN 'iPhone' WHEN model LIKE 'iPad%' THEN 'iPad' WHEN model LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, creative_type, template, template_mongo_id, dt, hr FROM {{ table_prefix }}transactions a WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' GROUP BY publisher_app, publisher_campaign, publisher_condition_set, advertiser_app, advertiser_campaign, advertiser_condition_set, ad_type, creative, REGEXP_REPLACE(event_location, '[\\\\u0000-\\\\u001f]', ''), country, source_type, asset_size, asset_ratio, frame, close_button, CASE WHEN model LIKE 'iPhone%' THEN 'iPhone' WHEN model LIKE 'iPad%' THEN 'iPad' WHEN model LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, creative_type, template, template_mongo_id, dt, hr", " "]}, {"dag_id": "groupa_phase1_transactions", "task_id": "fill_hourly_target_spend_aggr", "sql_list": [" {{global_cdh5_hive_settings}} {{local_hive_settings}} USE {{ campaign_spend_db }}", " SET mapreduce.job.name=Campaign Spend - Hourly Target Spend Aggr - {{ds}} {{to_hour(execution_date)}}", " -- -------------------------------------------------- -- Table hourly_target_spend_aggr -- -------------------------------------------------- INSERT OVERWRITE TABLE {{table_prefix}}hourly_target_spend_aggr PARTITION (dt='{{ds}}', hr='{{to_hour(execution_date)}}') SELECT advertiser_campaign campaign_id, advertiser_condition_set target_id, SUM(initial) money_spent, '{{ds}}', '{{to_hour(execution_date)}}', unix_timestamp() record_timestamp, 'batch' load_type FROM {{dwh_db}}.hourly_transaction_aggr WHERE dt='{{ds}}' AND hr='{{to_hour(execution_date)}}' GROUP BY advertiser_campaign, advertiser_condition_set", " "]}, {"dag_id": "mongo_cpm_transactions_to_hive", "task_id": "cpm_mongo_and_spark_output_diff", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ dwh_json_serde_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}missing_mongo_cpm_transaction_ids ( spark_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '{{ dwh_basedir }}/{{ table_prefix }}missing_mongo_cpm_transaction_ids'", " INSERT OVERWRITE TABLE {{ table_prefix }}missing_mongo_cpm_transaction_ids PARTITION (dt='{{ds}}', hr='{{ to_hour(execution_date) }}') SELECT a.spark_mongo_id FROM ( SELECT id spark_mongo_id, meta.advertisingApp advertisingApp, meta.advertisingCampaign advertisingCampaign, meta.advertiserConditionSet advertisingConditionSet, meta.creativeId creativeId, meta.publishingApp publishingApp, meta.publishingCampaign publishingCampaign, meta.country country, COALESCE(meta.location, '') eventLocation, meta.adType adType, ROUND(CAST(meta.cpm AS DOUBLE), 6) cpm, publisherAccountIn, advertiserAccountOut, ROUND(CAST(moneyInitial AS DOUBLE), 3) moneyInitial, ROUND(CAST(moneyFinal AS DOUBLE), 3) moneyFinal, dateCreated FROM {{ table_prefix }}cpm_transaction_spark_mongo WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) a LEFT OUTER JOIN ( SELECT id mongo_id, advertisingApp, advertisingCampaign, advertisingConditionSet, creativeId, publishingApp, publishingCampaign, country, COALESCE(eventLocation, '') eventLocation, adType, ROUND(CAST(cpm AS DOUBLE), 6) cpm, publisherAccountIn, advertiserAccountOut, ROUND(CAST(moneyInitial AS DOUBLE), 3) moneyInitial, ROUND(CAST(moneyFinal AS DOUBLE), 3) moneyFinal, dateCreated FROM {{ table_prefix }}cpm_transactions WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) b ON ( a.advertisingApp = b.advertisingApp AND a.advertisingCampaign = b.advertisingCampaign AND a.advertisingConditionSet = b.advertisingConditionSet AND a.creativeId = b.creativeId AND a.publishingApp = b.publishingApp AND a.publishingCampaign = b.publishingCampaign AND a.country = b.country AND a.eventLocation = b.eventLocation AND a.adType = b.adType AND a.cpm = b.cpm AND a.publisherAccountIn = b.publisherAccountIn AND a.advertiserAccountOut = b.advertiserAccountOut AND a.moneyInitial = b.moneyInitial AND a.moneyFinal = b.moneyFinal AND a.dateCreated = b.dateCreated ) WHERE b.mongo_id IS NULL", " "]}, {"dag_id": "mongo_cpm_transactions_to_hive", "task_id": "create_cpm_transactions_json_hourly", "sql_list": [" {{ dwh_json_serde_jar }} SET mapreduce.job.name=Create {{table_prefix}}cpm_transactions_json_hourly", " CREATE EXTERNAL TABLE IF NOT EXISTS {{table_prefix}}cpm_transactions_json_hourly ( txnid struct<oid:STRING>, date_created INT, `to` STRING, `from` STRING, initial STRING, final STRING, campaign STRING, creative STRING, from_app STRING, install_id STRING, condition_set STRING, `type` STRING, published_in STRING, meta struct<published_in:STRING, country:STRING, click:struct<cgn:STRING, condition_set:STRING, condition_set_publisher:STRING, `type`:STRING, creative:STRING, `location`:STRING, creative_ratio:STRING, creative_size:STRING, frame:STRING, close_button:STRING, date_created:INT, impression_id:STRING>, `to`:STRING, cgn:STRING, condition_set:STRING, condition_set_publisher:STRING, `type`:STRING, creative:STRING, `location`:STRING, meta:struct<country:STRING, region:STRING, city:STRING, dma:STRING, model:STRING, os:STRING, ip:STRING>, deviceId:STRING, sdk:STRING, app:STRING, reachability:STRING, app_sheet:STRING, language:STRING, creative_ratio:STRING, creative_size:STRING, frame:STRING, close_button:STRING, event_type:STRING, device_type:STRING, creative_type:STRING, bid_type:STRING, bid_value:STRING, retarget_reinstall:STRING, date_created:INT, impression_id:STRING, template:STRING, template_mongo_id:STRING, is_pym:BOOLEAN>, sdk STRING, reachability STRING, language STRING, click_id STRING, experiment STRING, hostname STRING, release_hash STRING, client_type STRING, billing_type STRING, impression_id STRING, mongo_id struct<oid:STRING> ) PARTITIONED BY (week STRING, job_execution_ts BIGINT) ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' WITH SERDEPROPERTIES ('json.mappings' = 'txnid.oid:mongo_id.oid') LOCATION '{{dwh_basedir}}/{{table_prefix}}cpm_transactions_json_hourly'", " "]}, {"dag_id": "mongo_cpm_transactions_to_hive", "task_id": "fill_transactions", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ dwh_json_serde_jar }} {{ hive_analytics_jar }} CREATE TEMPORARY FUNCTION GET_TIMESTAMP AS 'io.caffeine.hive.udf.ConvertMongoIdToTimestamp'", " SET mapreduce.job.name=Fill CPM Transactions CSV", " INSERT OVERWRITE TABLE {{table_prefix}}transactions PARTITION (dt='{{ds}}', hr='{{ to_hour(execution_date) }}', job_execution_ts=0, event_type='cpm') SELECT mongo_id.oid transaction_id, click_id, install_id, date_created unix_ts, `to` publisher_user, `from` advertiser_user, CAST(COALESCE(initial, '0') AS FLOAT) initial, CAST(COALESCE(final, '0') AS FLOAT) final, CAST(COALESCE(initial, '0') AS FLOAT) - CAST(COALESCE(final, '0') AS FLOAT) commission, CASE WHEN install_id IS NOT NULL THEN 1 WHEN click_id IS NOT NULL THEN 0 WHEN meta.`type` IN ('4','5') THEN 4 ELSE 2 END source_type, UNIX_TIMESTAMP() record_insertion_ts, from_app publisher_app, COALESCE(meta.published_in, published_in) publisher_campaign, CASE WHEN install_id IS NOT NULL THEN meta.click.condition_set_publisher ELSE meta.condition_set_publisher END publisher_condition_set, CASE WHEN install_id IS NOT NULL THEN meta.app ELSE meta.`to` END advertiser_app, CASE WHEN install_id IS NOT NULL THEN meta.click.cgn ELSE meta.cgn END advertiser_campaign, CASE WHEN install_id IS NOT NULL THEN meta.click.condition_set ELSE meta.condition_set END advertiser_condition_set, CASE WHEN install_id IS NOT NULL THEN meta.click.`type` ELSE meta.`type` END ad_type, CASE WHEN install_id IS NOT NULL THEN meta.click.creative ELSE meta.creative END creative, meta.deviceId device_id, CASE WHEN install_id IS NOT NULL THEN meta.click.`location` ELSE meta.`location` END event_location, meta.sdk sdk, CASE WHEN COALESCE(meta.meta.country, meta.country) RLIKE '^[A-Za-z]{2}$' THEN COALESCE(meta.meta.country, meta.country) ELSE NULL END country, meta.meta.model model, meta.meta.os os, meta.device_type model_id, meta.reachability reachability, meta.app_sheet app_sheet, REGEXP_REPLACE(meta.language, '[\\\\u0000-\\\\u001f]', '') language, experiment, CASE WHEN install_id IS NOT NULL THEN meta.click.creative_ratio ELSE meta.creative_ratio END asset_ratio, CASE WHEN install_id IS NOT NULL THEN meta.click.creative_size ELSE meta.creative_size END asset_size, CASE WHEN install_id IS NOT NULL THEN meta.click.frame ELSE meta.frame END frame, CASE WHEN install_id IS NOT NULL THEN meta.click.close_button ELSE meta.close_button END close_button, CAST(meta.creative_type AS INT) creative_type, meta.meta.region region, meta.meta.city city, meta.meta.dma dma, meta.meta.ip ip, NULL hostname, release_hash, client_type, meta.bid_type bid_type, CAST(meta.bid_value AS FLOAT) bid_value, billing_type, CASE WHEN COALESCE(install_id, '') <> '' THEN meta.click.date_created WHEN COALESCE(click_id, '') <> '' THEN meta.date_created END click_unix_ts, GET_TIMESTAMP(mongo_id.oid) mongo_insertion_ts, --** Key ts value utilized for actual Mongo dumps **-- NULL deprecated_field1, COALESCE(impression_id, meta.impression_id, meta.click.impression_id) impression_id, meta.template template, meta.template_mongo_id template_mongo_id, meta.is_pym is_pym FROM {{table_prefix}}cpm_transactions_json_hourly WHERE job_execution_ts = {{ get_unix_ts(execution_date) }} AND ( (install_id IS NOT NULL OR click_id IS NOT NULL OR meta.event_type = 'cpm' ) OR meta.creative_type = '2' OR meta.`type` IN ('4','5') )", " "]}, {"dag_id": "mongo_cpm_transactions_to_hive", "task_id": "create_condensed_cpm_transactions_table", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}cpm_transactions ( id STRING, advertisingApp STRING, advertisingCampaign STRING, advertisingConditionSet STRING, creativeId STRING, publishingApp STRING, publishingCampaign STRING, publishingConditionSet STRING, country STRING, eventLocation STRING, adType STRING, cpm FLOAT, publisherAccountIn STRING, advertiserAccountOut STRING, moneyInitial FLOAT, moneyFinal FLOAT, dateCreated INT ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '{{ dwh_basedir }}/{{ table_prefix }}cpm_transactions'", " INSERT OVERWRITE TABLE {{ table_prefix }}cpm_transactions PARTITION (dt='{{ds}}', hr='{{ to_hour(execution_date) }}') SELECT transaction_id id, advertiser_app advertisingApp, advertiser_campaign advertisingCampaign, advertiser_condition_set advertisingConditionSet, creative creativeId, publisher_app publishingApp, publisher_campaign publishingCampaign, publisher_condition_set publishingConditionSet, country, event_location eventLocation, ad_type adType, bid_value cpm, publisher_user publisherAccountIn, advertiser_user advertiserAccountOut, initial moneyInitial, final moneyFinal, unix_ts dateCreated FROM {{ table_prefix }}transactions WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' AND event_type = 'cpm' "]}, {"dag_id": "mongo_cpm_transactions_to_hive", "task_id": "create_transactions", "sql_list": [" CREATE EXTERNAL TABLE IF NOT EXISTS {{table_prefix}}transactions ( transaction_id STRING, click_id STRING, install_id STRING, unix_ts BIGINT, publisher_user STRING, advertiser_user STRING, initial FLOAT, final FLOAT, commission FLOAT, source_type INT, record_insertion_ts BIGINT, publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, advertiser_app STRING, advertiser_campaign STRING, advertiser_condition_set STRING, ad_type INT, creative STRING, device_id STRING, event_location STRING, sdk STRING, country STRING, model STRING, os STRING, model_id STRING, reachability INT, app_sheet INT, language STRING, experiment STRING, asset_ratio STRING, asset_size STRING, frame STRING, close_button STRING, creative_type STRING, region STRING, city STRING, dma STRING, ip STRING, hostname STRING, release_hash STRING, client_type STRING, bid_type STRING, bid_value FLOAT, billing_type STRING, click_unix_ts BIGINT, mongo_insertion_ts BIGINT, deprecated_field1 BIGINT, impression_id STRING, template STRING, template_mongo_id STRING, is_pym BOOLEAN ) PARTITIONED BY (dt STRING, hr STRING, job_execution_ts BIGINT, event_type STRING) stored as sequencefile LOCATION '{{dwh_basedir}}/{{table_prefix}}transactions_v3'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "parse_cpm_mongo_json", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ dwh_json_serde_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ tmp_prefix }}cpm_transaction_spark_mongo ( hostname STRING, advertiserAccountOut STRING, advertisingCampaign STRING, startTime STRING, moneyInitial FLOAT, id STRING, `_id` STRING, publishingCampaign STRING, publisherAccountIn STRING, advertisingConditionSet STRING, publishingApp STRING, dateCreated INT, transactionType STRING, creativeId STRING, campaignType STRING, moneyFinal FLOAT, batchCount INT, meta STRUCT< bidType:STRING, publishingApp:STRING, eventType:STRING, advertisingCampaign:STRING, publisherConditionSet:STRING, country:STRING, bidValue:FLOAT, advertiserConditionSet:STRING, publishingCampaign:STRING, advertisingApp:STRING, location:STRING, dateShort:STRING, ecpm:FLOAT, dateCreated:INT, creativeId:STRING, adType:INT, id:STRING, cpm:FLOAT>, retries INT ) PARTITIONED BY (dt STRING, hr STRING) ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping_full_mongo_transaction'", " ALTER TABLE {{ tmp_prefix }}cpm_transaction_spark_mongo ADD IF NOT EXISTS PARTITION (dt = '{{ ds }}', hr = '{{ to_hour(execution_date) }}') LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping_full_mongo_transaction/dt={{ ds }}/hr={{ to_hour(execution_date) }}'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "create_cpm_transaction_mapping_table", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ tmp_prefix }}cpm_transaction_mapping ( publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, advertiser_app STRING, advertiser_campaign STRING, advertiser_condition_set STRING, creative STRING, country STRING, event_location STRING, ad_type INT, ecpm FLOAT, cpm FLOAT, publisher_account_in STRING, advertiser_account_out STRING, cpm_start_time BIGINT, cpm_end_time BIGINT, ad_request_ts BIGINT, unix_ts BIGINT, advertising_campaign_type INT, free BOOLEAN, impression_id STRING, transaction_id STRING, batch_count INT, date_created BIGINT, final_price DOUBLE, advertiser_price DOUBLE, chartboost_commission DOUBLE ) PARTITIONED BY ( dt STRING, hr STRING ) ROW FORMAT SERDE 'parquet.hive.serde.ParquetHiveSerDe' STORED AS PARQUET LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "add_cpm_partition", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} ALTER TABLE warehouse.{{ tmp_prefix }}cpm_transaction_mapping ADD IF NOT EXISTS PARTITION (dt = '{{ ds }}', hr = '{{ to_hour(execution_date) }}') LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping/dt={{ ds }}/hr={{ to_hour(execution_date) }}'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "parse_cpm_mongo_json", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ dwh_json_serde_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ tmp_prefix }}cpm_transaction_spark_mongo ( hostname STRING, advertiserAccountOut STRING, advertisingCampaign STRING, startTime STRING, moneyInitial FLOAT, id STRING, `_id` STRING, publishingCampaign STRING, publisherAccountIn STRING, advertisingConditionSet STRING, publishingApp STRING, dateCreated INT, transactionType STRING, creativeId STRING, campaignType STRING, moneyFinal FLOAT, batchCount INT, meta STRUCT< bidType:STRING, publishingApp:STRING, eventType:STRING, advertisingCampaign:STRING, publisherConditionSet:STRING, country:STRING, bidValue:FLOAT, advertiserConditionSet:STRING, publishingCampaign:STRING, advertisingApp:STRING, location:STRING, dateShort:STRING, ecpm:FLOAT, dateCreated:INT, creativeId:STRING, adType:INT, id:STRING, cpm:FLOAT>, retries INT ) PARTITIONED BY (dt STRING, hr STRING) ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping_full_mongo_transaction'", " ALTER TABLE {{ tmp_prefix }}cpm_transaction_spark_mongo ADD IF NOT EXISTS PARTITION (dt = '{{ ds }}', hr = '{{ to_hour(execution_date) }}') LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping_full_mongo_transaction/dt={{ ds }}/hr={{ to_hour(execution_date) }}'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "create_cpm_transaction_mapping_table", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} CREATE EXTERNAL TABLE IF NOT EXISTS {{ tmp_prefix }}cpm_transaction_mapping ( publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, advertiser_app STRING, advertiser_campaign STRING, advertiser_condition_set STRING, creative STRING, country STRING, event_location STRING, ad_type INT, ecpm FLOAT, cpm FLOAT, publisher_account_in STRING, advertiser_account_out STRING, cpm_start_time BIGINT, cpm_end_time BIGINT, ad_request_ts BIGINT, unix_ts BIGINT, advertising_campaign_type INT, free BOOLEAN, impression_id STRING, transaction_id STRING, batch_count INT, date_created BIGINT, final_price DOUBLE, advertiser_price DOUBLE, chartboost_commission DOUBLE ) PARTITIONED BY ( dt STRING, hr STRING ) ROW FORMAT SERDE 'parquet.hive.serde.ParquetHiveSerDe' STORED AS PARQUET LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping'", " "]}, {"dag_id": "cpm_transactions_to_mongo_hdfs", "task_id": "add_cpm_partition", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} ALTER TABLE warehouse.{{ tmp_prefix }}cpm_transaction_mapping ADD IF NOT EXISTS PARTITION (dt = '{{ ds }}', hr = '{{ to_hour(execution_date) }}') LOCATION '{{ dwh_basedir }}/{{ tmp_prefix }}cpm_transaction_mapping/dt={{ ds }}/hr={{ to_hour(execution_date) }}'", " "]}, {"dag_id": "groupa_phase1_videos", "task_id": "daily_video_complete_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Daily Video Complete Aggr - {{ ds }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_video_complete_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, experiment STRING, asset_size STRING, asset_ratio STRING, affiliate INT, distinct_id_count BIGINT, record_insertion_ts BIGINT, device_type STRING, creative_type STRING, frame STRING, close_button STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/daily_video_complete_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_video_complete_aggr PARTITION (dt) SELECT publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, experiment, asset_size, asset_ratio, affiliate, SUM(distinct_id_count), unix_timestamp(), device_type, creative_type, frame, close_button, bid_type, template, template_mongo_id, dt FROM {{ table_prefix }}hourly_video_complete_aggr WHERE dt = '{{ ds }}' GROUP BY publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, experiment, asset_size, asset_ratio, affiliate, device_type, creative_type, frame, close_button, bid_type, template, template_mongo_id, dt", " "]}, {"dag_id": "groupa_phase1_videos", "task_id": "hourly_video_complete_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_json_parse_function }} SET mapreduce.job.name=Group A - Hourly Video Complete Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}hourly_video_complete_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, experiment STRING, asset_size STRING, asset_ratio STRING, affiliate INT, distinct_id_count BIGINT, record_insertion_ts BIGINT, device_type STRING, creative_type STRING, frame STRING, close_button STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/{{table_prefix}}hourly_video_complete_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}hourly_video_complete_aggr PARTITION (dt, hr) SELECT ad_id['from'] publisher_app, obj['from_campaign'] publisher_campaign, ad_id['to'] advertiser_app, ad_id['cgn'] advertiser_campaign, ad_id['type'] ad_type, ad_id['condition_set_publisher'] publisher_condition_set, ad_id['condition_set'] advertiser_condition_set, REGEXP_REPLACE(ad_id['creative'], '[^0-9a-zA-Z]','') creative, REGEXP_REPLACE(obj['location'], '[\\\\u0000-\\\\u001f]', '') event_location, CASE WHEN meta['country'] RLIKE '^[A-Za-z]{2}$' THEN meta['country'] END country, NULL experiment, ad_id['creative_size'] asset_size, ad_id['creative_ratio'] asset_ratio, NULL affiliate, CAST(COUNT(DISTINCT CONCAT(ad_id['id'], obj['deviceId'])) AS BIGINT) distinct_id_count, unix_timestamp(), CASE WHEN meta['model'] LIKE 'iPhone%' THEN 'iPhone' WHEN meta['model'] LIKE 'iPad%' THEN 'iPad' WHEN meta['model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END device_type, obj['creative_type'] creative_type, ad_id['frame'] frame, ad_id['close_button'] close_button, ad_id['bid_type'] bid_type, obj['template'] template, obj['template_mongo_id'] template_mongo_id, js.dt, js.hr FROM ( SELECT * FROM {{ table_prefix }}video_complete_json WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) js LATERAL VIEW explode(json_parse(json)) a AS obj LATERAL VIEW explode(json_parse(obj['ad_id'])) b AS ad_id LATERAL VIEW explode(json_parse(ad_id['meta'])) c AS meta GROUP BY ad_id['from'], obj['from_campaign'], ad_id['to'], ad_id['cgn'], ad_id['type'], ad_id['condition_set_publisher'], ad_id['condition_set'], REGEXP_REPLACE(ad_id['creative'], '[^0-9a-zA-Z]',''), REGEXP_REPLACE(obj['location'], '[\\\\u0000-\\\\u001f]', ''), CASE WHEN meta['country'] RLIKE '^[A-Za-z]{2}$' THEN meta['country'] END, ad_id['creative_size'], ad_id['creative_ratio'], CASE WHEN meta['model'] LIKE 'iPhone%' THEN 'iPhone' WHEN meta['model'] LIKE 'iPad%' THEN 'iPad' WHEN meta['model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, obj['creative_type'], ad_id['frame'], ad_id['close_button'], ad_id['bid_type'], obj['template'], obj['template_mongo_id'], js.dt, js.hr", " "]}, {"dag_id": "groupa_phase1_clicks", "task_id": "hourly_click_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_json_parse_function }} SET mapreduce.job.name=Group A - Hourly Click Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}hourly_click_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/hourly_click_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}hourly_click_aggr PARTITION (dt, hr) SELECT obj['from_app'] publisher_app, obj['from_campaign'] publisher_campaign, obj['to_app'] advertiser_app, obj['to_campaign'] advertiser_campaign, obj['type'] ad_type, obj['from_condition_set'] publisher_condition_set, obj['to_condition_set'] advertiser_condition_set, REGEXP_EXTRACT(REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]',''),'^.{0,50}',0) creative, REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', '') event_location, CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END country, CAST(COUNT(DISTINCT CONCAT(obj['click_id'], obj['uuid'])) AS BIGINT) distinct_id_count, unix_timestamp(), NULL experiment, obj['creative_size'] asset_size, obj['creative_ratio'] asset_ratio, obj['frame'] frame, obj['close_button'] close_button, CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END device_type, obj['creative_type'] creative_type, obj['bid_type'] bid_type, obj['template'] template, obj['template_mongo_id'] template_mongo_id, js.dt, js.hr FROM ( SELECT * FROM {{ table_prefix }}click_json WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) js LATERAL VIEW explode(json_parse(json)) a AS obj GROUP BY obj['from_app'], obj['from_campaign'], obj['to_app'], obj['to_campaign'], obj['type'], obj['from_condition_set'], obj['to_condition_set'], REGEXP_EXTRACT(REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]',''),'^.{0,50}',0), REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', ''), CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END, obj['creative_size'], obj['creative_ratio'], obj['frame'], obj['close_button'], CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, obj['creative_type'], obj['bid_type'], obj['template'], obj['template_mongo_id'], js.dt, js.hr", " "]}, {"dag_id": "groupa_phase1_clicks", "task_id": "daily_click_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Daily Click Aggr - {{ ds }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_click_aggr ( publisher_app STRING, publisher_campaign STRING, advertiser_app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/daily_click_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_click_aggr PARTITION (dt) SELECT publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, SUM(distinct_id_count), unix_timestamp(), experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt FROM {{ table_prefix }}hourly_click_aggr WHERE dt = '{{ ds }}' GROUP BY publisher_app, publisher_campaign, advertiser_app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt", " "]}, {"dag_id": "groupa_phase1_installs", "task_id": "converted_installs", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_json_parse_function }} SET mapreduce.job.name=Group A - Converted Installs - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}converted_installs ( install_id STRING, click_id STRING, impression_id STRING, unix_ts BIGINT, device_id STRING, app STRING, sdk STRING, country STRING, model STRING, os STRING, record_insertion_ts BIGINT, advertiser_campaign STRING, advertiser_condition_set STRING, publisher_app STRING, publisher_campaign STRING, publisher_condition_set STRING, creative STRING, ad_type INT, event_location STRING, app_sheet INT, cost_value FLOAT, cost_type STRING, model_id STRING, reachability INT, language STRING, click_unix_ts BIGINT, identifiers STRING, experiment STRING, uuid STRING, macid STRING, ifa STRING, asset_ratio STRING, asset_size STRING, gaid STRING, creative_type STRING, bid_type STRING, bid_value FLOAT, advertiser_sdk STRING, video_view_id STRING, template STRING, template_mongo_id STRING, is_pym BOOLEAN ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/{{ table_prefix }}converted_installs'", " INSERT OVERWRITE TABLE {{ table_prefix }}converted_installs PARTITION (dt, hr) SELECT obj['install_id'] install_id, CASE WHEN (conversion_event['type']='click') THEN conversion_event['id'] ELSE obj['click_id'] END as click_id, obj['impression_id'] impression_id, obj['unix_time'] unix_ts, obj['uuid'] device_id, obj['app'] app, obj['sdk'] sdk, CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END country, obj['meta_model'] model, REGEXP_REPLACE(obj['meta_os'],'\\\\\\u0000', '') os, unix_timestamp(), obj['to_campaign'] advertiser_campaign, obj['to_condition_set'] advertiser_condition_set, obj['from_app'] publisher_app, obj['from_campaign'] publisher_campaign, obj['from_condition_set'] publisher_condition_set, REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]','') creative, obj['type'] ad_type, REGEXP_REPLACE(obj['event_location'], '\\\\s+', ' ') event_location, obj['app_sheet'] app_sheet, CASE WHEN COALESCE(obj['smartbid_value'], obj['bid_value'], '') = '' THEN obj['cost_value'] ELSE COALESCE(obj['smartbid_value'], obj['bid_value']) END cost_value, CASE WHEN COALESCE(obj['smartbid_type'], obj['bid_type'], '') = '' THEN obj['cost_type'] WHEN COALESCE(obj['smartbid_type'], obj['bid_type']) = 'ocpc' THEN 'target cpi' ELSE COALESCE(obj['smartbid_type'], obj['bid_type']) END cost_type, REGEXP_REPLACE(obj['device_type'], '[\\u0000-\\u001f]', '') model_id, obj['reachability'] reachability, REGEXP_REPLACE(obj['language'], '[\\\\u0000-\\\\u001f]', '') language, obj['click_date_created'] click_unix_ts, obj['identifiers'] identifiers, obj['experiment'] experiment, REGEXP_EXTRACT(obj['identifiers'],'\\\\\"uuid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1) uuid, REGEXP_EXTRACT(obj['identifiers'],'\\\\\"macid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1) macid, REGEXP_EXTRACT(obj['identifiers'],'\\\\\"ifa\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1) ifa, obj['creative_ratio'] asset_ratio, obj['creative_size'] asset_size, REGEXP_EXTRACT(obj['identifiers'],'\\\\\"gaid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1) gaid, obj['creative_type'] creative_type, COALESCE(obj['smartbid_type'], obj['bid_type']) bid_type, COALESCE(obj['smartbid_value'], obj['bid_value']) bid_value, obj['advertiser_sdk'] advertiser_sdk, CASE WHEN (conversion_event['type']='view') THEN conversion_event['id'] ELSE NULL END as video_view_id, obj['template'] template, obj['template_mongo_id'] template_mongo_id, CASE WHEN obj['is_pym']='true' THEN true ELSE false END as is_pym, js.dt, js.hr FROM ( SELECT * FROM {{ table_prefix }}install_json WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) js LATERAL VIEW explode(json_parse(json)) a AS obj LATERAL VIEW explode(json_parse(COALESCE(obj['conversion_event'], '{}'))) b AS conversion_event WHERE COALESCE(obj['click_id'],conversion_event['id'],'') <> '' GROUP BY obj['install_id'], CASE WHEN (conversion_event['type']='click') THEN conversion_event['id'] ELSE obj['click_id'] END, CASE WHEN (conversion_event['type']='view') THEN conversion_event['id'] ELSE NULL END, obj['impression_id'], obj['unix_time'], obj['uuid'], obj['app'], obj['sdk'], CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END, obj['meta_model'], REGEXP_REPLACE(obj['meta_os'],'\\\\\\u0000', ''), obj['to_campaign'], obj['to_condition_set'], obj['from_app'], obj['from_campaign'], obj['from_condition_set'], REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]',''), obj['type'], REGEXP_REPLACE(obj['event_location'], '\\\\s+', ' '), obj['app_sheet'], CASE WHEN COALESCE(obj['smartbid_value'], obj['bid_value'], '') = '' THEN obj['cost_value'] ELSE COALESCE(obj['smartbid_value'], obj['bid_value']) END, CASE WHEN COALESCE(obj['smartbid_type'], obj['bid_type'], '') = '' THEN obj['cost_type'] WHEN COALESCE(obj['smartbid_type'], obj['bid_type']) = 'ocpc' THEN 'target cpi' ELSE COALESCE(obj['smartbid_type'], obj['bid_type']) END, REGEXP_REPLACE(obj['device_type'], '[\\u0000-\\u001f]', ''), obj['reachability'], REGEXP_REPLACE(obj['language'], '[\\\\u0000-\\\\u001f]', ''), obj['click_date_created'], obj['identifiers'], obj['experiment'], REGEXP_EXTRACT(obj['identifiers'],'\\\\\"uuid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1), REGEXP_EXTRACT(obj['identifiers'],'\\\\\"macid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1), REGEXP_EXTRACT(obj['identifiers'],'\\\\\"ifa\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1), obj['creative_ratio'], obj['creative_size'], REGEXP_EXTRACT(obj['identifiers'],'\\\\\"gaid\\\\\"\\\\:\\\\\"(.*?)\\\\\"',1), obj['creative_type'], COALESCE(obj['smartbid_type'], obj['bid_type']), COALESCE(obj['smartbid_value'], obj['bid_value']), obj['advertiser_sdk'], obj['template'], obj['template_mongo_id'], CASE WHEN obj['is_pym']='true' THEN true ELSE false END, js.dt, js.hr", " "]}, {"dag_id": "groupa_phase1_installs", "task_id": "daily_install_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} SET mapreduce.job.name=Group A - Daily Install Aggr - {{ ds }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}daily_install_aggr ( publisher_app STRING, publisher_campaign STRING, app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, converted INT, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING ) LOCATION '/data/warehouse_v1/{{ table_prefix }}daily_install_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}daily_install_aggr PARTITION (dt) SELECT publisher_app, publisher_campaign, app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, converted, SUM(distinct_id_count), unix_timestamp(), experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt FROM {{ table_prefix }}hourly_install_aggr WHERE dt = '{{ ds }}' GROUP BY publisher_app, publisher_campaign, app, advertiser_campaign, ad_type, publisher_condition_set, advertiser_condition_set, creative, event_location, country, converted, experiment, asset_size, asset_ratio, frame, close_button, device_type, creative_type, bid_type, template, template_mongo_id, dt", " "]}, {"dag_id": "groupa_phase1_installs", "task_id": "hourly_install_aggr", "sql_list": [" {{ global_cdh5_hive_settings }} {{ local_hive_settings }} {{ hive_analytics_jar }} {{ create_json_parse_function }} SET mapreduce.job.name=Group A - Hourly Install Aggr - {{ ds }} {{ to_hour(execution_date) }}", " CREATE EXTERNAL TABLE IF NOT EXISTS {{ table_prefix }}hourly_install_aggr ( publisher_app STRING, publisher_campaign STRING, app STRING, advertiser_campaign STRING, ad_type INT, publisher_condition_set STRING, advertiser_condition_set STRING, creative STRING, event_location STRING, country STRING, converted INT, distinct_id_count BIGINT, record_insertion_ts BIGINT, experiment STRING, asset_size STRING, asset_ratio STRING, frame STRING, close_button STRING, device_type STRING, creative_type STRING, bid_type STRING, template STRING, template_mongo_id STRING ) PARTITIONED BY ( dt STRING, hr STRING ) LOCATION '/data/warehouse_v1/{{ table_prefix }}hourly_install_aggr'", " INSERT OVERWRITE TABLE {{ table_prefix }}hourly_install_aggr PARTITION (dt, hr) SELECT obj['from_app'] publisher_app, obj['from_campaign'] publisher_campaign, obj['app'] app, obj['to_campaign'] advertiser_campaign, obj['type'] ad_type, obj['from_condition_set'] publisher_condition_set, obj['to_condition_set'] advertiser_condition_set, REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]','') creative, REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', '') event_location, CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END country, CASE WHEN COALESCE(obj['click_id'],conversion_event['id'],'') <> '' THEN 1 ELSE 0 END converted, COUNT(DISTINCT obj['install_id']) distinct_id_count, unix_timestamp(), NULL experiment, obj['creative_size'] asset_size, obj['creative_ratio'] asset_ratio, obj['frame'] frame, obj['close_button'] close_button, CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END device_type, obj['creative_type'] creative_type, COALESCE(obj['smartbid_type'], obj['bid_type']) bid_type, obj['template'] template, obj['template_mongo_id'] template_mongo_id, js.dt, js.hr FROM ( SELECT * FROM {{ table_prefix }}install_json WHERE dt = '{{ ds }}' AND hr = '{{ to_hour(execution_date) }}' ) js LATERAL VIEW explode(json_parse(json)) a AS obj LATERAL VIEW explode(json_parse(COALESCE(obj['conversion_event'], '{}'))) b AS conversion_event GROUP BY obj['from_app'], obj['from_campaign'], obj['app'], obj['to_campaign'], obj['type'], obj['from_condition_set'], obj['to_condition_set'], REGEXP_REPLACE(obj['creative'], '[^0-9a-zA-Z]',''), REGEXP_REPLACE(obj['event_location'], '[\\\\u0000-\\\\u001f]', ''), CASE WHEN obj['meta_country'] RLIKE '^[A-Za-z]{2}$' THEN obj['meta_country'] END, CASE WHEN COALESCE(obj['click_id'],conversion_event['id'],'') <> '' THEN 1 ELSE 0 END, obj['creative_size'], obj['creative_ratio'], obj['frame'], obj['close_button'], CASE WHEN obj['meta_model'] LIKE 'iPhone%' THEN 'iPhone' WHEN obj['meta_model'] LIKE 'iPad%' THEN 'iPad' WHEN obj['meta_model'] LIKE 'iPod%' THEN 'iPod Touch' ELSE 'Android' END, obj['creative_type'], COALESCE(obj['smartbid_type'], obj['bid_type']), obj['template'], obj['template_mongo_id'], js.dt, js.hr", " "]}]